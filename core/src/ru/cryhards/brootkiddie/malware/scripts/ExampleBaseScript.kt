package ru.cryhards.brootkiddie.malware.scripts

import ru.cryhards.brootkiddie.malware.effects.HidingEffect
import ru.cryhards.brootkiddie.malware.effects.MiningEffect
import ru.cryhards.brootkiddie.malware.effects.SpreadingEffect
import ru.cryhards.brootkiddie.malware.effects.dataclasses.HidingEffectDataClass
import ru.cryhards.brootkiddie.malware.effects.dataclasses.MiningEffectDataClass
import ru.cryhards.brootkiddie.malware.effects.dataclasses.SpreadingEffectDataClass

/**
 * Created by Dima on 21.01.2018.
 */
class ExampleBaseScript(level : Int, name : String) : BaseScript(level, name){
    override var capacity = 10
    override val type = BaseScriptTypes.Example

    override fun getStats(): String {

        val ir = (effects[0].dataClass as SpreadingEffectDataClass).irritation
                    + (effects[1].dataClass as HidingEffectDataClass).irritation
                    + (effects[2].dataClass as MiningEffectDataClass).irritation

        val sp = (effects[0].dataClass as SpreadingEffectDataClass).speed

        val inf = (effects[0].dataClass as SpreadingEffectDataClass).infectiousness

        val ms = (effects[2].dataClass as MiningEffectDataClass).miningSpeed

        return "ir : $ir ms : $ms sp : $sp inf : $inf l : $level c : $capacity"
    }

    override fun getSize(): Int {
        return 0
    }

    init {
        addEffect(SpreadingEffect(SpreadingEffectDataClass(100f*level, 0.23f*level, 1f*level)))
        addEffect(HidingEffect(HidingEffectDataClass(0.5f*level)))
        addEffect(MiningEffect(MiningEffectDataClass(0.00013f*level, 1f*level)))
        capacity = level*10
    }
}