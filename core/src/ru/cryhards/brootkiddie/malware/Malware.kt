package ru.cryhards.brootkiddie.malware


import com.badlogic.gdx.Gdx
import ru.cryhards.brootkiddie.Game
import ru.cryhards.brootkiddie.Player
import ru.cryhards.brootkiddie.malware.scripts.Script


abstract class Malware(val name: String, val player : Player) {
    var scripts = emptyList<Script>()

    var infectiousness = 0f
    var speed = 0f
    var infected  = 1
    var awareLevel = 0f
    var criticalAwareLevel = 0f
    var irriration = 0f
    var places = 10
    var spotted = false

    fun addScript(script: Script) {
        script.attach(this)
        scripts += script
    }

    fun getSize(): Int {
        val size = scripts.sumBy { it.getSize() }
        return size
    }

    open fun recalcStats() {
        infectiousness = 0f
        speed = 0f
        criticalAwareLevel = 0f
        irriration = getSize()/places.toFloat()

        for (script in scripts) {
            script.act()
        }

        if (!spotted) awareLevel+=irriration/100f

        Gdx.app.log("Aware", awareLevel.toString())

        if (awareLevel >= criticalAwareLevel && infected > 0) {
            spotted =  true
            infected-= maxOf((criticalAwareLevel*infected).toInt(), 1)
        }

        val max = player.distribution.getLimit(infectiousness)
        var delta = minOf((max*speed*(1f + infected/max)/100000f).toInt(), max-infected)
        if (spotted) delta = (delta*(1-criticalAwareLevel)/10f).toInt()
        if (infected > 0 &&  infected != max)  {
            infected+=delta
        }
    }
}